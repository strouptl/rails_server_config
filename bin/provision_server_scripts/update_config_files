#!/bin/bash

# Nginx
sudo rm /etc/nginx/sites-enabled/default
if [[ $proxied == true ]]; then
  sudo cp config_files/server/nginx/proxied/nginx.conf /etc/nginx/
  sudo cp config_files/server/nginx/proxied/self-signed.conf /etc/nginx/snippets
  sudo cp config_files/server/nginx/proxied/rails /etc/nginx/sites-available/
  sudo cp config_files/server/nginx/proxied/health_check /etc/nginx/sites-available/
else
  sudo cp config_files/server/nginx/standalone/nginx.conf /etc/nginx/
  sudo cp config_files/server/nginx/standalone/rails /etc/nginx/sites-available/
fi

sudo ln -s /etc/nginx/sites-available/rails /etc/nginx/sites-enabled/

if [[ $proxied == true ]]; then
  sudo ln -s /etc/nginx/sites-available/health_check /etc/nginx/sites-enabled/
fi


# ImageMagick
sudo cp config_files/server/image-magick/policy.xml /etc/ImageMagick-6/

# Services
sudo cp config_files/server/services/rails.service /etc/systemd/system/
sudo cp config_files/server/services/rails.socket /etc/systemd/system/
sudo cp config_files/server/services/sidekiq.service /etc/systemd/system/

# Logrotate
sudo cp config_files/server/logrotate/rails /etc/logrotate.d

# Yarn
cp config_files/server/yarn/.bash_aliases ~

# AWS Cloudwatch
sudo cp config_files/server/aws/amazon-cloudwatch-agent.json /opt/aws/amazon-cloudwatch-agent/etc/
